1
00:00:00,500 --> 00:00:03,510
Projections reduce network
overhead and processing

2
00:00:03,510 --> 00:00:05,730
requirements by limiting
the fields that are

3
00:00:05,730 --> 00:00:07,890
returned in results documents.

4
00:00:07,890 --> 00:00:10,680
By default, MongoDB
returns all fields

5
00:00:10,680 --> 00:00:13,410
in all matching
documents for queries.

6
00:00:13,410 --> 00:00:16,650
You can define a projection
as the second argument

7
00:00:16,650 --> 00:00:18,090
to the find method.

8
00:00:18,090 --> 00:00:20,610
If I want to limit my result
documents so that they just

9
00:00:20,610 --> 00:00:24,540
contain a title, I can do that
using the following syntax,

10
00:00:24,540 --> 00:00:26,040
or almost.

11
00:00:26,040 --> 00:00:29,580
So using this syntax, I
can create a projection

12
00:00:29,580 --> 00:00:31,470
where results from
this query will

13
00:00:31,470 --> 00:00:34,500
return just the
title and, actually,

14
00:00:34,500 --> 00:00:36,780
the title and the underscore ID.

15
00:00:36,780 --> 00:00:38,520
And we'll talk about
that in just a sec.

16
00:00:38,520 --> 00:00:41,730
So again, use the
filter as usual.

17
00:00:41,730 --> 00:00:45,600
But in this case, because we'd
like to just have the title,

18
00:00:45,600 --> 00:00:49,380
we're also adding a projection
as the second argument

19
00:00:49,380 --> 00:00:51,450
that we passed to find.

20
00:00:51,450 --> 00:00:55,260
Now, I get the title
and the underscore ID.

21
00:00:55,260 --> 00:00:59,070
I get the underscore ID
field because underscore ID

22
00:00:59,070 --> 00:01:02,070
is returned by default
for all projections,

23
00:01:02,070 --> 00:01:07,210
unless I explicitly exclude
it from the projection.

24
00:01:07,210 --> 00:01:09,510
The projection syntax allows
me to explicitly include

25
00:01:09,510 --> 00:01:11,350
fields in documents returned.

26
00:01:11,350 --> 00:01:14,070
I can also explicitly
exclude fields.

27
00:01:14,070 --> 00:01:17,310
I explicitly include
fields using a one,

28
00:01:17,310 --> 00:01:20,160
and exclude using a zero.

29
00:01:20,160 --> 00:01:23,730
If I don't want to see the
underscore ID field, then,

30
00:01:23,730 --> 00:01:28,050
to my projection, I need
to add underscore ID zero.

31
00:01:28,050 --> 00:01:29,250
Let's run this.

32
00:01:29,250 --> 00:01:33,060
And now we can see that we
do, in fact, just have titles.

33
00:01:33,060 --> 00:01:35,490
Now if we have the reverse
situation, where we actually

34
00:01:35,490 --> 00:01:38,520
want to explicitly exclude
a couple of fields,

35
00:01:38,520 --> 00:01:40,950
we can do that as follows.

36
00:01:40,950 --> 00:01:44,760
So let's say that rather
than include title,

37
00:01:44,760 --> 00:01:48,390
I'm going to exclude viewer
rating, viewer votes, and run

38
00:01:48,390 --> 00:01:49,140
time.

39
00:01:49,140 --> 00:01:50,860
And let's pretty that up.

40
00:01:50,860 --> 00:01:53,250
Now my results
contain all fields

41
00:01:53,250 --> 00:01:56,800
except for the ones I
explicitly excluded here.

42
00:01:56,800 --> 00:01:59,730
Note that there is no
viewer rating, no viewer

43
00:01:59,730 --> 00:02:04,230
votes, and no run time
in these documents.

44
00:02:04,230 --> 00:02:06,180
And just for the
sake of comparison,

45
00:02:06,180 --> 00:02:07,950
if I drop the
projection, then we

46
00:02:07,950 --> 00:02:12,180
see the viewer rating, viewer
votes, and run time coming

47
00:02:12,180 --> 00:02:15,600
back in for those documents
that have a run time,

48
00:02:15,600 --> 00:02:17,080
such as this one.

49
00:02:17,080 --> 00:02:20,010
So, if you need to limit
the fields returned

50
00:02:20,010 --> 00:02:23,120
by your queries, projection
is the tool to use.

51
00:02:23,120 --> 00:02:25,590
You zeros to explicitly
exclude fields

52
00:02:25,590 --> 00:02:27,630
that you don't need to
see in your result set.

53
00:02:27,630 --> 00:02:30,720
And use one to
explicitly include fields

54
00:02:30,720 --> 00:00:00,000
and exclude all others.

