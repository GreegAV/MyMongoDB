Hi there.

In this section, we're going to talk about the new hybrid index build feature in MongoDB 4.2 on how this feature removes database locks.

In our quest to continually improve MongoDB, we've redesigned index builds to remove the trade-offs and limitations of the previous index build types.

First let's have a look at why we've made these changes.

In previous versions of MongoDB, we had two different methods of building indexes.

The first was a foreground index build, which was the most performant but had the unfortunate side effect of locking the entire database for the duration of the index build.

This meant that you could neither read from or write to the database for the duration of the index build.

Let's try this in the mongo shell in 4.0 to see how this locking can affect operations on a database during an index build.

As you can see, we cannot find or insert any documents while the index build is in flight.

You can see how this could be problematic if triggered on a production database in error.

Let's try this in MongoDB 4.2.

First we're going to create an index.

And while the index build is in flight, we're going to open a new shell and try and insert some documents.

As you can see, there's no locking.

Great.

So in previous releases, we also had background index builds, which don't hold a lock on a database but aren't as performant as a foreground index build.

The background index build uses an incremental approach that is slower than the foreground index build.

That is to say that the background index build will periodically lock the database but will yield to incoming read and write operations, releasing resources to attend to incoming requests.

If the index is larger than the available RAM, the incremental approach can take much longer than a foreground index build.

The other downside of background indexes is that the index structure resulting from this type of index build is less efficient than foreground indexes, resulting in less optimal index traversal operations.

In this latest release, we have addressed these trade-offs with our new hybrid index build feature.

From 4.2 onwards, there will be no need for a background or a foreground index build-- only one hybrid mechanism that takes the best of both worlds.

The new hybrid index build has both the performance of a foreground index build and the nonlocking properties of a background index build, meaning that all database operations can proceed uninhibited for the duration of the build.

This is now the only way to build an index on MongoDB.

It's the only option available.

It's important to note that the index structure remains unchanged.

However, the method we use to build the indexes has changed to allow database operations to continue as normal for the duration of the build.

So let's recap.

MongoDB has one index build type, which is lockless and performant.

Our motivation for this was to address the trade-offs of building indexes using foreground and indexes using the background methods.

We can now build indexes quickly and without the need to lock the entire database.