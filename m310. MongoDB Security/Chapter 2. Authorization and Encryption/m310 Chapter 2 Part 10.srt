
1
00:00:00.000 --> 00:00:02.590
Now that we have our
sysadmin Ben all set up,

2
00:00:02.590 --> 00:00:05.440
it's time for us to try and
see if this role authorization

3
00:00:05.440 --> 00:00:07.970
model is actually
working properly.

4
00:00:07.970 --> 00:00:10.030
Let's go ahead and
authenticate with Ben's user.

5
00:00:10.030 --> 00:00:12.160
First we'll need to switch
to the admin database

6
00:00:12.160 --> 00:00:14.140
and log in with
Ben's credentials.

7
00:00:14.140 --> 00:00:14.710
Great.

8
00:00:14.710 --> 00:00:16.059
Now we're authenticated.

9
00:00:16.059 --> 00:00:18.660
Let's try to create one
of our remaining users.

10
00:00:18.660 --> 00:00:21.190
There's still Carol,
our superstar DBA

11
00:00:21.190 --> 00:00:23.820
that introduced us to the
magical world of MongoDB.

12
00:00:23.820 --> 00:00:25.370
Let's create an account for her.

13
00:00:25.370 --> 00:00:27.790
Carol's our DBA, so
it makes sense for us

14
00:00:27.790 --> 00:00:29.990
to give her the dbAdmin role.

15
00:00:29.990 --> 00:00:32.770
And as you can see, our role
based authorization model

16
00:00:32.770 --> 00:00:34.540
is working as expected.

17
00:00:34.540 --> 00:00:35.560
Could not add user.

18
00:00:35.560 --> 00:00:38.990
Not authorized on admin to
execute command create user.

19
00:00:38.990 --> 00:00:41.620
Now in the example, we
specified a document

20
00:00:41.620 --> 00:00:45.160
that said w majority
and w timeout 300.

21
00:00:45.160 --> 00:00:47.440
These are here to
define the write concern

22
00:00:47.440 --> 00:00:49.600
that we're applying to
execute this command.

23
00:00:49.600 --> 00:00:51.310
In particular, we
want to make sure

24
00:00:51.310 --> 00:00:53.590
that this is a state
change that is propagated

25
00:00:53.590 --> 00:00:55.390
across all members,
or in this case

26
00:00:55.390 --> 00:00:58.520
the majority of the
members in our replica set.

27
00:00:58.520 --> 00:01:01.180
And we also don't want to wait
longer than 300 milliseconds

28
00:01:01.180 --> 00:01:02.249
to obtain a response.

29
00:01:02.249 --> 00:01:04.540
Now, it's important that Ben
leave operations like this

30
00:01:04.540 --> 00:01:07.510
to Alice, who is after all
responsible for these sorts

31
00:01:07.510 --> 00:01:08.250
of tasks.

32
00:01:08.250 --> 00:01:10.000
Let's go ahead and
authenticate with Alice

33
00:01:10.000 --> 00:01:11.320
and create this user.

34
00:01:11.320 --> 00:01:12.439
Great.

35
00:01:12.439 --> 00:01:14.230
Now we want to make
sure that we understand

36
00:01:14.230 --> 00:01:15.880
what Carol needs
to be able to do

37
00:01:15.880 --> 00:01:18.400
and what she shouldn't
be able to do.

38
00:01:18.400 --> 00:01:21.310
As a DBA, it's important that
Carol can check the database

39
00:01:21.310 --> 00:01:25.477
statistics, kill long running
operations with kill op,

40
00:01:25.477 --> 00:01:27.310
and then be able to
also create collections,

41
00:01:27.310 --> 00:01:30.010
indexes, et cetera.

42
00:01:30.010 --> 00:01:31.780
However, we don't
want Carol to be

43
00:01:31.780 --> 00:01:34.840
able to write any data to any
collection, manager the cluster

44
00:01:34.840 --> 00:01:39.040
in any way, or to be able
to create any new users.

45
00:01:39.040 --> 00:01:41.080
As you saw when Ben tried
to run this command,

46
00:01:41.080 --> 00:01:43.540
we gave Carol the
dbAdmin role, which

47
00:01:43.540 --> 00:01:47.020
makes the most sense for the
reasons we just discussed.

48
00:01:47.020 --> 00:01:48.800
Let's go ahead and
create this user.

49
00:01:48.800 --> 00:01:49.300
Awesome.

50
00:01:49.300 --> 00:01:50.760
It successfully added Carol.

51
00:01:50.760 --> 00:01:52.510
Let's go ahead and
authenticate with Carol

52
00:01:52.510 --> 00:01:55.080
and make sure she can do the
things she needs to be able to.

53
00:01:55.080 --> 00:01:58.110
We should be able to list the
admin database collections.

54
00:01:58.110 --> 00:01:58.870
Awesome.

55
00:01:58.870 --> 00:02:01.720
And we can see this special
system dot users and system dot

56
00:02:01.720 --> 00:02:03.070
version collections.

57
00:02:03.070 --> 00:02:06.830
But if we try to list all the
databases we'll get in error.

58
00:02:06.830 --> 00:02:07.330
What?

59
00:02:07.330 --> 00:02:09.009
How does Carol not
have the privilege

60
00:02:09.009 --> 00:02:10.870
to list all the databases?

61
00:02:10.870 --> 00:02:12.370
Well, this happens
because we didn't

62
00:02:12.370 --> 00:02:15.100
create Carol as a global
database administrator.

63
00:02:15.100 --> 00:02:17.950
We only gave Carol
the ability to dbAdmin

64
00:02:17.950 --> 00:02:20.010
on the admin database.