
1
00:00:00.000 --> 00:00:00.500


2
00:00:00.500 --> 00:00:03.330
When a user tries to
authenticate against MongoDB,

3
00:00:03.330 --> 00:00:07.840
we will do a few steps, given
the new LDAP authorization

4
00:00:07.840 --> 00:00:08.772
mechanism.

5
00:00:08.772 --> 00:00:10.730
The first step is to
perform the authentication

6
00:00:10.730 --> 00:00:12.100
of those credentials.

7
00:00:12.100 --> 00:00:15.130
Now again, MongoDB has
several different ways

8
00:00:15.130 --> 00:00:16.520
of authenticating users.

9
00:00:16.520 --> 00:00:20.285
We can use LDAP, Kerberos,
X509, and SCRAM one.

10
00:00:20.285 --> 00:00:22.860
But now, we are going to
be focusing on the ones

11
00:00:22.860 --> 00:00:25.780
that LDAP authorization
mechanism allows.

12
00:00:25.780 --> 00:00:27.420
Basically this
authentication will

13
00:00:27.420 --> 00:00:30.690
be performed via an external
authentication mechanism.

14
00:00:30.690 --> 00:00:33.810
And those will be LDAP,
Kerberos, and X509.

15
00:00:33.810 --> 00:00:36.250
So in this step, we'll pick
up the user credentials

16
00:00:36.250 --> 00:00:39.120
and match it against the
external mechanism defined

17
00:00:39.120 --> 00:00:40.220
for this particular user.

18
00:00:40.220 --> 00:00:42.760
It might be Kerberos
server, LDAP server,

19
00:00:42.760 --> 00:00:44.190
or even a certificate.

20
00:00:44.190 --> 00:00:48.050
Now, the fact that we are
enabling LDAP for authorization

21
00:00:48.050 --> 00:00:50.610
does not mean that we
have to have an LDAP

22
00:00:50.610 --> 00:00:52.500
server for authentication.

23
00:00:52.500 --> 00:00:55.760
Any of the external
authentication mechanisms

24
00:00:55.760 --> 00:00:58.790
can be used--
authenticate the users,

25
00:00:58.790 --> 00:01:02.670
although the LDAP server will
be used for the authorization

26
00:01:02.670 --> 00:01:03.490
components.

27
00:01:03.490 --> 00:01:05.980
So first step, step
number one, authentication

28
00:01:05.980 --> 00:01:08.350
of the credentials
passed to MongoDB back

29
00:01:08.350 --> 00:01:10.480
to the external system in place.

30
00:01:10.480 --> 00:01:12.230
Now, for step
number two, we need

31
00:01:12.230 --> 00:01:16.170
to consider that we might
have different authentication

32
00:01:16.170 --> 00:01:20.030
credentials for the
authorization component

33
00:01:20.030 --> 00:01:22.460
that needs to be
transformed to match

34
00:01:22.460 --> 00:01:25.540
the ones set for authorization.

35
00:01:25.540 --> 00:01:27.920
So if you think about
a very common set

36
00:01:27.920 --> 00:01:32.600
up, like having Kerberos
server for authentication,

37
00:01:32.600 --> 00:01:36.165
validating the users, and
having the new configuration

38
00:01:36.165 --> 00:01:40.530
of MongoDB that authorizes
users using an LDAP server,

39
00:01:40.530 --> 00:01:45.030
these users define on the
different systems might vary.

40
00:01:45.030 --> 00:01:48.980
They will not have the
same formats for Kerberos

41
00:01:48.980 --> 00:01:50.930
or for LDAP server.

42
00:01:50.930 --> 00:01:53.360
So a step that
needs to be done is

43
00:01:53.360 --> 00:01:56.880
to transform the credentials
passed along by the user

44
00:01:56.880 --> 00:01:59.670
to MongoDB to validate
and authenticate

45
00:01:59.670 --> 00:02:02.860
to be able to validate
against authorization.

46
00:02:02.860 --> 00:02:06.370
So once we get a valid
notification, for example,

47
00:02:06.370 --> 00:02:10.030
from Kerberos saying
that our user is valid,

48
00:02:10.030 --> 00:02:12.320
we will need to
transform that user

49
00:02:12.320 --> 00:02:15.310
so it can be matched
against the LDAP

50
00:02:15.310 --> 00:02:18.480
server for the
authorization component.

51
00:02:18.480 --> 00:02:21.250
By default, the
transformation will do nothing

52
00:02:21.250 --> 00:02:25.410
and the authentication username
will be passed to the LDAP

53
00:02:25.410 --> 00:02:26.870
for authorization.

54
00:02:26.870 --> 00:02:29.830
Then step three will
be to actually validate

55
00:02:29.830 --> 00:02:31.280
the authorization.

56
00:02:31.280 --> 00:02:34.710
Now obviously, if we have
the internal authentication

57
00:02:34.710 --> 00:02:37.190
mechanism of MongoDB
for authorizing,

58
00:02:37.190 --> 00:02:40.140
we will not be passing
along to an LDAP observer.

59
00:02:40.140 --> 00:02:43.100
But this lesson is all about
LDAP server for authorization.

60
00:02:43.100 --> 00:02:44.730
So let's have a look to that.

61
00:02:44.730 --> 00:02:47.850
After we transformed
whatever user credential

62
00:02:47.850 --> 00:02:52.020
that we received and having it
validated by the server that

63
00:02:52.020 --> 00:02:55.970
is authenticating it, and only
if needed, because not always

64
00:02:55.970 --> 00:02:58.910
the authorization mechanism
requires a transformation.

65
00:02:58.910 --> 00:03:01.250
By default, it doesn't
do that transformation.

66
00:03:01.250 --> 00:03:04.670
But once it has its final
stage after transformation

67
00:03:04.670 --> 00:03:07.380
or just passing along
the direct user,

68
00:03:07.380 --> 00:03:11.240
this needs to be sent in a
query that will query the LDAP

69
00:03:11.240 --> 00:03:15.440
server for retrieving back all
the distinguished names related

70
00:03:15.440 --> 00:03:16.970
to that user.

71
00:03:16.970 --> 00:03:18.580
Now, our configuration
file, we'll

72
00:03:18.580 --> 00:03:24.460
find a query template, which
will have a curly brackets user

73
00:03:24.460 --> 00:03:29.020
token that will replace by
the transformed credential

74
00:03:29.020 --> 00:03:31.630
to validate against LDAP server.

75
00:03:31.630 --> 00:03:34.220
In this step, MongoDB
will do a query

76
00:03:34.220 --> 00:03:36.100
to retrieve the LDAP
group information.

77
00:03:36.100 --> 00:03:40.650
If the query requests
attributes from an entity,

78
00:03:40.650 --> 00:03:44.790
the attribute values will be
treated as the user groups.

79
00:03:44.790 --> 00:03:48.390
If the query returns
entities, these entities

80
00:03:48.390 --> 00:03:52.550
and distinguished names will
be treated as the user groups.

81
00:03:52.550 --> 00:03:56.640
Our fourth step will determine
that if LDAP authorization is

82
00:03:56.640 --> 00:04:00.370
enabled, the default behavior
determines that each acquired,

83
00:04:00.370 --> 00:04:01.920
distinguished name
will be treated

84
00:04:01.920 --> 00:04:05.730
as the name of a role
on the admin database.

85
00:04:05.730 --> 00:04:08.940
Due to the fact that MongoDB
supports roles [INAUDIBLE],

86
00:04:08.940 --> 00:04:13.130
roles may be created that are
entirely made of other roles

87
00:04:13.130 --> 00:04:15.180
that a given user may possess.

88
00:04:15.180 --> 00:04:17.000
This will facilitate
the creation

89
00:04:17.000 --> 00:04:19.920
of access control
[INAUDIBLE] for our users

90
00:04:19.920 --> 00:04:23.079
and the roles associated
with those users.