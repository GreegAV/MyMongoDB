Until this point, we've been looking to how to determine individual facets.

But as you probably already realized, when building applications, we might need multiple different facets to achieve the kind of filters that we want to provide to our end users.

An initial example.

I've shown you that apart from the list of results that's given from a particular search term or query that we might do against a catalog, we might have different filters to help us trim down, narrow down the search results that we might be more interested on, depending on the dimensions that are suited for what we want to do.

And we've been exploring some of those throughout the previous lessons.

When building applications, we might want to group our data and their orthogonal properties.

In running all this individually, we might take too many round trips to the database.

With MongoDB 3.4, faceting support can compute several different facets in one single command.

Due to this, we have a new operator called facet that allows us to do exactly that.

So let's basically take all the different facets that we've been building throughout the course individually.

Let's say the Categories, the Employees, the Workforce facet, and the Founded year that company's have been created.

And let's start grouping all of this into one single command in our aggregation pipeline.

So let's start by matching all documents that have databases on their description or overview by specifying a text search query.

Pass along that list of results to our facet stage.

And then generating the different facets that we've been looking into before by the Categories, Employees, or Founded dates to provide back that set of different facets that we've been exploring so far.

So in essence, with this command, we are collecting back all different facets with their matching conditions and output variations, bringing in documents from the database all at once.

Once I run it, I'll get all sorts of different facets, facet for Founded, the facets for Employees, and the facet for Categories that my initial match search provided.

Each sub pipeline within facet is passed the exact same set of input documents that this match stage here generates.

And they are completely independent from one another.

The output of one's sub pipeline cannot be used by the following ones within the same facet command.

This means that we can interpret this as sub pipelining inside of our aggregation framework pipeline provided via the dollar facet stage.

And this is how we can generate facets navigation using MongoDB 3.4.