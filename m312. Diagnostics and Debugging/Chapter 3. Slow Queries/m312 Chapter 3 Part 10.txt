In this lesson, we'll see how Mtools can help us to identify slow queries.

We'll dive deep into three tools to help you identify those slow queries, mloginfo, mplotqueries, and mlogvis.

Mloginfo can be used to create a quick summary of the query shapes.

Mplotqueries gives you a plot to show all the queries over time.

And mlogvis is similar to mplotqueries, but will make use of your internet browser instead of using the graphical libraries needed by mplotqueries.

Let's take a look.

First I'll ssh into my Vagrant box.

Great.

Next I'll go into my shared folder.

OK, all of these tools need log files and I've got one here.

This is actual data from one of our customers, but the databases, collections, and field names have been replaced by animal names, while the text values are replaced by random strings.

Let's start with the simplest tool.

Mloginfo can be used for a lot of things.

The most common is to get the envelope of log, basically figuring out the period of time it covers and from which host it comes.

We've redacted some of the information, which is why it's unknown.

However, there is also a mode with minus minus queries where it reports all the queries by shape ordered by the total amount of time that it took.

That means if a query took two seconds, on average, and appears one million times in the log, then the total amount of time will be 2 million seconds.

By ordering the queries that way, we can easily see the most expensive query shape at the top and decide if it should be optimized.

I'm afraid the text is wrapping.

I had to do that in order to keep it big enough to read.

We can see at the top of the queries that there is an update that has a count of 1203.

The update may have been run more often than this, but this is the number of times it appears in the log, because all those log entries were for updates that exceeded the threshold of a slow query, which by default is 100 milliseconds.

This update takes an average of 599 milliseconds, as you can see from this mean value column.

And obviously, for all these queries, we see those are not great numbers.

And we'd like to look at them.

It could be that there is no index on hamster.wallaby.

And adding the index could improve the performance a lot.

Not just for this update, but also improving the performance of the overall system.

The following two lines show another query and an update that should also be optimized.

The following queries and updates are only a fraction of the time of those, so they have less of an impact.

That's why we care about this total time taken.