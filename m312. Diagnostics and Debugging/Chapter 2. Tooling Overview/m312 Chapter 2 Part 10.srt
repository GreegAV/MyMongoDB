1
00:00:00,030 --> 00:00:01,319
now we're going to<font color="#E5E5E5"> look at a stage</font><font color="#CCCCCC"> in</font>

2
00:00:01,319 --> 00:00:02,850
<font color="#E5E5E5">the aggregation pipeline that's very</font>

3
00:00:02,850 --> 00:00:06,810
useful<font color="#E5E5E5"> index stats first let's spin up a</font>

4
00:00:06,810 --> 00:00:14,130
replica set from<font color="#E5E5E5"> our VM and connect next</font>

5
00:00:14,130 --> 00:00:18,060
let's insert a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> documents we'll</font>

6
00:00:18,060 --> 00:00:19,859
also need some indexes as you probably

7
00:00:19,859 --> 00:00:25,890
inferred from the lesson title great<font color="#E5E5E5"> now</font>

8
00:00:25,890 --> 00:00:27,660
suppose we've got<font color="#CCCCCC"> a production system</font>

9
00:00:27,660 --> 00:00:29,490
<font color="#E5E5E5">it's going along and we want to know</font>

10
00:00:29,490 --> 00:00:32,009
which indexes we're using we<font color="#E5E5E5"> have a</font>

11
00:00:32,009 --> 00:00:34,050
number<font color="#E5E5E5"> of options we could turn on the</font>

12
00:00:34,050 --> 00:00:36,239
profiler<font color="#CCCCCC"> but that's got</font><font color="#E5E5E5"> some big</font>

13
00:00:36,239 --> 00:00:38,300
downsides<font color="#E5E5E5"> especially in production</font><font color="#CCCCCC"> I</font>

14
00:00:38,300 --> 00:00:42,149
could use Mongo replay but that's going

15
00:00:42,149 --> 00:00:44,460
<font color="#E5E5E5">to take a long time to set up and it</font>

16
00:00:44,460 --> 00:00:46,079
might<font color="#CCCCCC"> be</font><font color="#E5E5E5"> overkill because I'll</font><font color="#CCCCCC"> have to</font>

17
00:00:46,079 --> 00:00:48,510
<font color="#E5E5E5">explain all of my queries anyway the</font>

18
00:00:48,510 --> 00:00:50,610
logs only help for<font color="#CCCCCC"> long-running queries</font>

19
00:00:50,610 --> 00:00:52,530
<font color="#E5E5E5">what I really want is a tool that we</font>

20
00:00:52,530 --> 00:00:54,230
<font color="#CCCCCC">built into</font><font color="#E5E5E5"> the aggregation pipeline</font>

21
00:00:54,230 --> 00:00:57,899
<font color="#E5E5E5">index stats this will tell us what</font>

22
00:00:57,899 --> 00:00:59,640
indexes are getting touched<font color="#E5E5E5"> and how</font>

23
00:00:59,640 --> 00:01:05,280
often<font color="#E5E5E5"> let's take a look okay so here's</font>

24
00:01:05,280 --> 00:01:08,250
our output<font color="#CCCCCC"> what are we looking at well</font>

25
00:01:08,250 --> 00:01:10,770
we've got three indexes<font color="#E5E5E5"> and we can see</font>

26
00:01:10,770 --> 00:01:14,460
one document per index<font color="#E5E5E5"> in each we have</font>

27
00:01:14,460 --> 00:01:19,590
the indexes<font color="#E5E5E5"> name we have the key we have</font>

28
00:01:19,590 --> 00:01:22,020
the host we're on and then we have<font color="#E5E5E5"> this</font>

29
00:01:22,020 --> 00:01:25,860
interesting<font color="#E5E5E5"> field accesses this shows us</font>

30
00:01:25,860 --> 00:01:28,020
how many<font color="#E5E5E5"> times</font><font color="#CCCCCC"> we've accessed the index</font>

31
00:01:28,020 --> 00:01:29,579
for as long<font color="#E5E5E5"> as</font><font color="#CCCCCC"> the server has</font><font color="#E5E5E5"> been</font>

32
00:01:29,579 --> 00:01:31,860
<font color="#CCCCCC">keeping track</font><font color="#E5E5E5"> the relevant number is</font>

33
00:01:31,860 --> 00:01:35,369
this<font color="#E5E5E5"> ops subfield and the value is</font>

34
00:01:35,369 --> 00:01:36,299
currently<font color="#CCCCCC"> zero</font>

35
00:01:36,299 --> 00:01:38,909
<font color="#E5E5E5">it's zero because</font><font color="#CCCCCC"> I haven't yet accessed</font>

36
00:01:38,909 --> 00:01:41,280
<font color="#E5E5E5">any of these indexes you can see that</font>

37
00:01:41,280 --> 00:01:43,799
it's zero for<font color="#E5E5E5"> all three</font><font color="#CCCCCC"> of them let's do</font>

38
00:01:43,799 --> 00:01:45,750
a<font color="#E5E5E5"> query that</font><font color="#CCCCCC"> uses the underscore ID</font>

39
00:01:45,750 --> 00:01:48,299
field<font color="#E5E5E5"> and let's also use the features of</font>

40
00:01:48,299 --> 00:01:50,460
<font color="#E5E5E5">the aggregation pipeline</font><font color="#CCCCCC"> to just look</font><font color="#E5E5E5"> at</font>

41
00:01:50,460 --> 00:01:55,350
the interesting stuff found my document

42
00:01:55,350 --> 00:01:58,110
<font color="#CCCCCC">and here's the aggregation</font><font color="#E5E5E5"> I'm going to</font>

43
00:01:58,110 --> 00:02:00,240
do I'm going to<font color="#E5E5E5"> just look at the key and</font>

44
00:02:00,240 --> 00:02:04,200
the accesses ops field<font color="#CCCCCC"> okay and we have</font>

45
00:02:04,200 --> 00:02:07,680
<font color="#E5E5E5">one two</font><font color="#CCCCCC"> three documents</font><font color="#E5E5E5"> that middle</font>

46
00:02:07,680 --> 00:02:10,410
document on underscore ID is all in<font color="#CCCCCC"> one</font>

47
00:02:10,410 --> 00:02:13,080
line but you can see that for the

48
00:02:13,080 --> 00:02:13,830
underscore I

49
00:02:13,830 --> 00:02:16,830
<font color="#CCCCCC">d</font><font color="#E5E5E5"> field we now have an OPS</font><font color="#CCCCCC"> of one rather</font>

50
00:02:16,830 --> 00:02:18,840
than<font color="#E5E5E5"> zero that's from that</font><font color="#CCCCCC"> fine one that</font>

51
00:02:18,840 --> 00:02:21,360
I<font color="#CCCCCC"> just ran</font><font color="#E5E5E5"> what if I do a query</font><font color="#CCCCCC"> that</font>

52
00:02:21,360 --> 00:02:26,940
doesn't<font color="#E5E5E5"> find any documents well that</font>

53
00:02:26,940 --> 00:02:29,340
still use the index so<font color="#E5E5E5"> ops was</font>

54
00:02:29,340 --> 00:02:32,070
incremented yet again what if I do a

55
00:02:32,070 --> 00:02:36,750
collection scan well that didn't use any

56
00:02:36,750 --> 00:02:39,090
of<font color="#CCCCCC"> my indexes so it didn't</font><font color="#E5E5E5"> increment the</font>

57
00:02:39,090 --> 00:02:41,610
ops field that's a good limitation to

58
00:02:41,610 --> 00:02:44,490
keep in mind index stats is not going to

59
00:02:44,490 --> 00:02:46,470
help me find collection scans<font color="#E5E5E5"> for any</font>

60
00:02:46,470 --> 00:02:48,390
reasonable workload however<font color="#E5E5E5"> you</font>

61
00:02:48,390 --> 00:02:50,430
shouldn't<font color="#E5E5E5"> be having collection scans and</font>

62
00:02:50,430 --> 00:02:52,620
if you do have them most<font color="#CCCCCC"> likely they're</font>

63
00:02:52,620 --> 00:02:55,860
going<font color="#E5E5E5"> to be appearing in the logs by the</font>

64
00:02:55,860 --> 00:02:57,780
way this counter<font color="#E5E5E5"> starts at zero when the</font>

65
00:02:57,780 --> 00:03:00,570
<font color="#E5E5E5">server process starts up or if the index</font>

66
00:03:00,570 --> 00:03:02,670
<font color="#CCCCCC">doesn't yet exist it starts when the</font>

67
00:03:02,670 --> 00:03:08,610
index gets built if we look at the

68
00:03:08,610 --> 00:03:12,510
accesses<font color="#E5E5E5"> since field we can see when</font>

69
00:03:12,510 --> 00:00:00,000
these indexes were built

